<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
                    http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
                    http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 基于XML配置事务管理 -->
    <context:property-placeholder location="classpath:/application.properties" />

    <!-- 1.配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClass" value="${spring.datasource.driver}"/>
        <property name="jdbcUrl" value="${spring.datasource.url}"/>
        <property name="username" value="${spring.datasource.username}"/>
        <property name="password" value="${spring.datasource.password}"/>
    </bean>

    <!-- 2.配置数据库操作 - mybatis -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="dataSource" value="#{dataSource}"/>-->
    </bean>

    <!-- 3.配置声明式事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 4.配置事务管理方法：相对重要的功能采用配置文件的方式配置事务管理 -->
    <aop:config>
        <!-- 切入点 -->
        <aop:pointcut id="txPointcut" expression="execution(* com.practice.test.service.impl.LogServiceImpl.*(..)"/>
        <!-- 事务增强 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>

    <!-- 5.事务增强方法 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 事务属性 -->
        <tx:attributes>
            <!-- 配置指定方法上的事务属性：超时时间、隔开级别、传播行为、是否只读... -->
            <tx:method name="*" timeout="5"/>
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--开启基于注解的事务管理-->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->


</beans>